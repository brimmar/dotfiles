- name: Install Alacritty
  block:
    - name: Create Config Dir of Alacritty
      become_user: "{{ host_user }}"
      file:
        path: "/home/{{ host_user }}/.config/alacritty/"
        state: directory
        mode: 0755

    - name: Download Alacritty
      become_user: "{{ host_user }}"
      git:
        dest: "/home/{{ host_user }}/alacritty/"
        recursive: no
        repo: "https://github.com/alacritty/alacritty.git"
      register: download_alacritty_result

    - name: Install Alacritty
      when: download_alacritty_result.changed
      become_user: "{{ host_user }}"
      command:
        chdir: "/home/{{ host_user }}/alacritty/"
        cmd: "/home/{{ host_user }}/.cargo/bin/cargo build --release"

    - name: Install Alacritty Terminfo
      when: download_alacritty_result.changed
      command:
        chdir: "/home/{{ host_user }}/alacritty/"
        cmd: "tic -xe alacritty,alacritty-direct extra/alacritty.info"

    - name: Copy alacritty to bin
      when: download_alacritty_result.changed
      copy:
        src: "/home/{{ host_user }}/alacritty/target/release/alacritty"
        dest: /usr/local/bin
        mode: 0755

    - name: Copy Alacritty Logo
      when: download_alacritty_result.changed
      copy:
        src: "/home/{{ host_user }}/alacritty/extra/logo/alacritty-term.svg"
        dest: /usr/share/pixmaps/Alacritty.svg
        mode: 0755

    - name: Desktop File Install Alacritty
      when: download_alacritty_result.changed
      command:
        chdir: "/home/{{ host_user }}/alacritty/"
        cmd: desktop-file-install extra/linux/Alacritty.desktop

    - name: Update Desktop
      when: download_alacritty_result.changed
      command: update-desktop-database

    - name: Ensure Man Page Exists
      when: download_alacritty_result.changed
      file:
        path: /usr/local/share/man/man1
        state: directory

    - name: Copy man page of alacritty
      when: download_alacritty_result.changed
      shell:
        chdir: "/home/{{ host_user }}/alacritty/"
        cmd: "gzip -c extra/alacritty.man | tee /usr/local/share/man/man1/alacritty.1.gz > /dev/null"

    - name: Copy the message of the man page of alacritty
      when: download_alacritty_result.changed
      shell:
        chdir: "/home/{{ host_user }}/alacritty/"
        cmd: "gzip -c extra/alacritty-msg.man | tee /usr/local/share/man/man1/alacritty-msg.1.gz > /dev/null"

    - name: Ensure bash completion exists
      when: download_alacritty_result.changed
      become_user: "{{ host_user }}"
      file:
        path: "/home/{{ host_user }}/.bash_completion"
        state: directory
        mode: 0755

    - name: Copy bash completion of alacritty
      when: download_alacritty_result.changed
      become_user: "{{ host_user }}"
      copy:
        src: "/home/{{ host_user }}/alacritty/extra/completions/alacritty.bash"
        dest: "/home/{{ host_user }}/.bash_completion/alacritty"
        mode: 0755

    - name: Append alacritty source to bashrc
      when: download_alacritty_result.changed
      become_user: "{{ host_user }}"
      shell: 'echo "source ~/.bash_completion/alacritty" >> ~/.bashrc'

- name: Install Flatpak Programs
  become_user: "{{ host_user }}"
  block:
    - name: Install Whatsapp
      flatpak:
        name: io.github.mimbrero.WhatsAppDesktop
        state: present
        method: user
    - name: Install Discord
      flatpak:
        name: com.discordapp.Discord
        state: present
        method: user
    - name: Install Telegram
      flatpak:
        name: org.telegram.desktop
        state: present
        method: user
    - name: Install Obsidian
      flatpak:
        name: md.obsidian.Obsidian
        state: present
        method: user
    - name: Install Stremio
      flatpak:
        name: com.stremio.Stremio
        state: present
        method: user
    - name: Install VLC
      flatpak:
        name: org.videolan.VLC
        state: present
        method: user
    - name: Install Lutris
      flatpak:
        name: net.lutris.Lutris
        state: present
        method: user

- name: Install Syncthing
  block:
    - name: Install APT Syncthing Package
      when: ansible_distribution in ["Debian", "Ubuntu", "Pop!_OS"]
      apt:
        name: syncthing
    - name: Enable syncthing service
      service:
        name: "syncthing@{{ host_user }}.service"
        enabled: yes
        state: started

- name: Install Bruno
  block:
    - name: Install Bruno using deb
      when: ansible_distribution in ["Debian", "Ubuntu", "Pop!_OS"]
      apt:
        deb: https://github.com/usebruno/bruno/releases/download/v1.6.1/bruno_1.6.1_amd64_linux.deb
        state: present
    - name: Install Bruno using yay
      become_user: "ansible"
      when: ansible_distribution in ["Archlinux"]
      command: yay -S --noconfirm --needed bruno-bin

- name: Install Musikcube
  block:
    - name: Install Musikcube using deb
      when: ansible_distribution in ["Debian", "Ubuntu", "Pop!_OS"]
      apt:
        deb: https://github.com/clangen/musikcube/releases/download/3.0.2/musikcube_3.0.2_linux_x86_64.deb
        state: present
    - name: Install Musikcube using yay
      become_user: "ansible"
      when: ansible_distribution in ["Archlinux"]
      command: yay -S --noconfirm --needed musikcube

- name: Install Planetscale
  command: docker pull planetscale/pscale:latest
